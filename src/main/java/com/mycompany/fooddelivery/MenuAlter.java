/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.fooddelivery;

import java.awt.AWTError;
import java.awt.Font;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.*;
import javax.swing.JOptionPane;
import java.math.BigDecimal;
/**
 *
 * @author mahad
 */
public class MenuAlter extends javax.swing.JFrame {
    Connection con;
    Statement st;
    PreparedStatement ps1;
    PreparedStatement ps2;
    PreparedStatement ps3;
    PreparedStatement ps4;
    PreparedStatement ps5;
    ResultSet rs;
    ResultSet rs1;
    /**
     * Creates new form MenuAlter
     */
    public MenuAlter(String args[]) {
     
        try {
            Class.forName("oracle.jdbc.OracleDriver");
            JOptionPane.showMessageDialog(this, "Driver Loaded!");
            try {
                String url = "jdbc:oracle:thin:@localhost:1521:XE";
                this.con = DriverManager.getConnection(url, "system", "dbms");
                st=con.createStatement();
                JOptionPane.showMessageDialog(this, "Connected to Oracle database!");
            } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
     initComponents(args);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents(String args[]) {

        MenuUpperPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        AddButton = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();
        ItemNameTextField = new javax.swing.JTextField();
        PriceTextField = new javax.swing.JTextField();
        CaloriesTextField = new javax.swing.JTextField();
        FoodTypeTextField = new javax.swing.JTextField();
        VegCheckBox = new javax.swing.JCheckBox();
        FoodIDTextField = new javax.swing.JTextField();
        MenuAlterBottom = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MenuUpperPanel.setBackground(new java.awt.Color(255, 128, 0));

        jLabel1.setFont(new java.awt.Font("Sitka Text", 0, 22)); // NOI18N
        jLabel1.setText("Menu Alter:");

        AddButton.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        AddButton.setText("Add Item");
        AddButton.addActionListener(e->{
                 String itemname=ItemNameTextField.getText().trim();
        String priceText=PriceTextField.getText().trim();
        double price;
         try {
        price = Double.parseDouble(priceText);
      } catch (NumberFormatException ex) {
     JOptionPane.showMessageDialog(this, "Enter a numeric price.");
     return;
      }
        String foodid=FoodIDTextField.getText().trim();
        String foodtype=FoodTypeTextField.getText().trim();
        int calories=Integer.parseInt(CaloriesTextField.getText());
        boolean veg=VegCheckBox.isSelected();
        try{
         String sql="insert into food(food_id,menu_id,food_name,calories,price) values(?,?,?,?,?)";
         String sql1="insert into foodtype(food_name,food_type,veg)values(?,?,?)";
        ps1 = con.prepareStatement(sql);
        ps2=con.prepareStatement(sql1);
        ps2.setString(1,itemname);
        ps2.setString(2,foodtype);
        int vegvalue=veg?1:0;
        ps2.setInt(3,vegvalue);
        ps1.setString(1,foodid);
        ps1.setString(2,args[0]);
        ps1.setString(3,itemname);
        ps1.setInt(4,calories);
        ps1.setDouble(5,price);
        int rowsAffected = ps2.executeUpdate();
        if(rowsAffected>0){
           JOptionPane.showMessageDialog(this, "inserted sucessfully to the foodtype table");
           int r=ps1.executeUpdate();
           if(r>0){
             JOptionPane.showMessageDialog(this, "inserted sucessfullt to the food table"); 
           }
        }
        else{
           JOptionPane.showMessageDialog(this, "not inserted sucessfully to the foodtype table");  
        }
        
        }
        catch(Exception n){
            System.out.println(n);
        
        }
        
            });

        ExitButton.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        ExitButton.setText("Exit");

        ItemNameTextField.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        ItemNameTextField.setText("Item Name");
        ItemNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemNameTextFieldActionPerformed(evt);
            }
        });

        PriceTextField.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        PriceTextField.setText("Price");
        PriceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceTextFieldActionPerformed(evt);
            }
        });

        CaloriesTextField.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        CaloriesTextField.setText("Calories");
        CaloriesTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CaloriesTextFieldActionPerformed(evt);
            }
        });

        FoodTypeTextField.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        FoodTypeTextField.setText("Food Type");
        FoodTypeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FoodTypeTextFieldActionPerformed(evt);
            }
        });

        VegCheckBox.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        VegCheckBox.setText("Veg");

        FoodIDTextField.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        FoodIDTextField.setText("Food ID");
        FoodIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FoodIDTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MenuUpperPanelLayout = new javax.swing.GroupLayout(MenuUpperPanel);
        MenuUpperPanel.setLayout(MenuUpperPanelLayout);
        MenuUpperPanelLayout.setHorizontalGroup(
            MenuUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuUpperPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MenuUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MenuUpperPanelLayout.createSequentialGroup()
                        .addGroup(MenuUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ItemNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FoodTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(MenuUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MenuUpperPanelLayout.createSequentialGroup()
                                .addComponent(PriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(FoodIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(MenuUpperPanelLayout.createSequentialGroup()
                                .addComponent(CaloriesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(VegCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(MenuUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ExitButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(23, 23, 23))
        );
        MenuUpperPanelLayout.setVerticalGroup(
            MenuUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuUpperPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MenuUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ItemNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FoodIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(MenuUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CaloriesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VegCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FoodTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        MenuAlterBottom.setBackground(new java.awt.Color(255, 253, 203));

        javax.swing.GroupLayout MenuAlterBottomLayout = new javax.swing.GroupLayout(MenuAlterBottom);
        MenuAlterBottom.setLayout(MenuAlterBottomLayout);
        MenuAlterBottomLayout.setHorizontalGroup(
            MenuAlterBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        MenuAlterBottomLayout.setVerticalGroup(
            MenuAlterBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 206, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MenuUpperPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MenuAlterBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MenuUpperPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MenuAlterBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

         

        MenuAlterBottom.setLayout(new BoxLayout(MenuAlterBottom, BoxLayout.Y_AXIS));
             ArrayList<ArrayList<Object>> nestedList = new ArrayList<>();
             try{
               rs=st.executeQuery("select food_name,price,food_id from food where menu_id='"+args[0]+"'");
               
                ResultSetMetaData metaData = rs.getMetaData();
            int columnCount = metaData.getColumnCount();

            // Process each row
            while (rs.next()) {
                ArrayList<Object> row = new ArrayList<>();
                for (int i = 1; i <= columnCount; i++) {
                    row.add(rs.getString(1));
                    row.add(rs.getObject(2));
                    row.add(rs.getString(3));
                   // Add column value to the row
                }
                nestedList.add(row);
            }
            for (ArrayList<Object> row : nestedList) {
                System.out.println(row);
            }
               
             }
             catch(Exception m){
              System.out.println(m);
             }
          
        for (int i=0;i<nestedList.size();i++){

            JPanel eachCityPanel= new JPanel();
            eachCityPanel.setBackground(new java.awt.Color(255,253,203));
            eachCityPanel.setPreferredSize(new java.awt.Dimension(600,80));
            eachCityPanel.setLayout(null);
            eachCityPanel.setBorder(BorderFactory.createLineBorder(java.awt.Color.BLACK, 1));
           
            
            JButton deleteItem=new JButton("Delete Item");
            deleteItem.setFont(new Font("Sitka Text", Font.BOLD, 20));
            deleteItem.setBounds(425, 25, 150, 30);
            deleteItem.setHorizontalAlignment(SwingConstants.CENTER);
            deleteItem.setBackground(new java.awt.Color(255,253,203));
            deleteItem.setBorder(null);
            final int index=i;
           
            deleteItem.addActionListener(e->{
                
                String id=(String) nestedList.get(index).get(2);
                String name=(String) nestedList.get(index).get(0);
                try{
                  String sql="delete from food where food_id=(?)";
                  String sql1="delete from foodtype where food_name=(?)";
                  String sql2="select count(*) from food where food_name=(?)";
                  ps5=con.prepareStatement(sql2);
                  ps5.setString(1,name);
                  ResultSet rs1=ps5.executeQuery();
                  if(rs1.next()){
                    int count=rs1.getInt(1);
                    if(count>1){
                      ps3=con.prepareStatement(sql);
                  ps3.setString(1,id);
                  ps3.execute();
                   JOptionPane.showMessageDialog(this,"Deleted from the food table");
                    }
                    else if(count==1){
                       ps4=con.prepareStatement(sql1);
                       ps4.setString(1,name);
                       JOptionPane.showMessageDialog(this,"Deleted from the foodtype table");
                       ps3=con.prepareStatement(sql);
                  ps3.setString(1,id);
                  ps3.execute();
                   JOptionPane.showMessageDialog(this,"Deleted from the food table");

                       
                       
                    }
                  }
                 
                 
                  
                  
                  
                }
                catch(Exception k){
                  System.out.println(k);
                }
                
                
                
            });

              String name4  = (String) nestedList.get(i).get(0);
             Object priceObj = nestedList.get(i).get(1);
    double price4;
    if (priceObj instanceof BigDecimal) {
        price4 = ((BigDecimal) priceObj).doubleValue();
    } else {
        price4 = ((Number) priceObj).doubleValue();
    }
            JLabel itemName=new JLabel(name4);
            itemName.setFont(new Font("Arial", Font.PLAIN, 20));
            itemName.setBounds(10, 25, 200, 30);
            itemName.setHorizontalAlignment(SwingConstants.LEFT);

            JLabel itemPrice=new JLabel(String.format("₹ %.2f", price4));
            itemPrice.setFont(new Font("Arial", Font.PLAIN, 20));
            itemPrice.setBounds(240, 25, 75, 30);
            itemPrice.setHorizontalAlignment(SwingConstants.LEFT);

            
    
            eachCityPanel.add(deleteItem);
            eachCityPanel.add(itemName);
            eachCityPanel.add(itemPrice);
    
            MenuAlterBottom.add(eachCityPanel);
         }



         JScrollPane scroll= new JScrollPane(MenuAlterBottom);
         scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
         scroll.setBounds(0, 150, 650, 200);
 
         this.getContentPane().add(scroll);
 
         getContentPane().setLayout(null);  // Disable layout manager, use absolute positioning
         getContentPane().add(MenuUpperPanel);  // Add upper panel
         MenuUpperPanel.setBounds(0, 0, 650, 150); // Adjust the position and size of the upper panel

         this.setSize(665,350);

    }// </editor-fold>//GEN-END:initComponents

    


        
         
         
    //GEN-LAST:event_AddButtonActionPerformed

    private void ItemNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemNameTextFieldActionPerformed

    private void PriceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PriceTextFieldActionPerformed

    private void CaloriesTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CaloriesTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CaloriesTextFieldActionPerformed

    private void FoodTypeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FoodTypeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FoodTypeTextFieldActionPerformed

    private void FoodIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FoodIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FoodIDTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuAlter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuAlter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuAlter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuAlter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuAlter(args).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JTextField CaloriesTextField;
    private javax.swing.JButton ExitButton;
    private javax.swing.JTextField FoodIDTextField;
    private javax.swing.JTextField FoodTypeTextField;
    private javax.swing.JTextField ItemNameTextField;
    private javax.swing.JPanel MenuAlterBottom;
    private javax.swing.JPanel MenuUpperPanel;
    private javax.swing.JTextField PriceTextField;
    private javax.swing.JCheckBox VegCheckBox;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
} 