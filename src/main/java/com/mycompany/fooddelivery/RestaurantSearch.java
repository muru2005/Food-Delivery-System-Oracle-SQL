/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.fooddelivery;
import javax.swing.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.*;
import java.awt.*;
import java.math.BigDecimal;
/**
 *
 * @author mahad
 */
class functionholder{
   public boolean isname(String name,String name1){
    if(name.equals("")){
     return true;
        
    }
    else{
     if(name.equals(name1)){
         return true;
     }
     else{
         return false;
     }}
    
    }
    public  boolean isxy(int x, int y, int x1, int y1) {
    double distance = Math.sqrt(Math.pow(x1 - x, 2) + Math.pow(y1 - y, 2));
    return distance <= 30;
  }

     
}

public class RestaurantSearch extends javax.swing.JFrame {
    Connection con;
    Statement st;
    PreparedStatement ps;
    PreparedStatement ps1;
    ResultSet rs;
    ResultSet rs1;
    /**
     * Creates new form Cart
     */
    public RestaurantSearch(String arr[]){
       
        try{
            Class.forName("oracle.jdbc.OracleDriver");
            JOptionPane.showMessageDialog(this,"Driver Loaded!");
            try{
                con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE",
                        "system","dbms");
                st=con.createStatement();
                JOptionPane.showMessageDialog(this,"Connected to Oracle database!");
                
            }catch(SQLException ex){
                Logger.getLogger(com.mycompany.fooddelivery.RestaurantSearch.class.getName()).log(Level.SEVERE,null, ex); //Add FoodDelivery before .Cart
JOptionPane.showMessageDialog(this,ex.getMessage());
            }
        }catch(ClassNotFoundException ex){
            Logger.getLogger(com.mycompany.fooddelivery.RestaurantSearch.class.getName()).log(Level.SEVERE,null, ex);  //Add FoodDelivery before .Cart
JOptionPane.showMessageDialog(this,ex.getMessage());

        }

         initComponents(arr);

        SearchLowerPanel.setLayout(new BoxLayout(SearchLowerPanel, BoxLayout.Y_AXIS));

      

        getContentPane().setLayout(null);  // Disable layout manager, use absolute positioning
        getContentPane().add(SearchUpperPanel);  // Add upper panel
        SearchUpperPanel.setBounds(0, 0, 650, 150); // Adjust the position and size of the upper panel
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents(String [] args) {
        
        SearchUpperPanel = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        SearchLowerPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SearchUpperPanel.setBackground(new java.awt.Color(255, 128, 0));

        jLabel1.setFont(new java.awt.Font("Sitka Text", 0, 16)); // NOI18N
        jLabel1.setText("Enter X:");

        jLabel2.setFont(new java.awt.Font("Sitka Text", 0, 16)); // NOI18N
        jLabel2.setText("Enter Y:");

        jLabel3.setFont(new java.awt.Font("Sitka Text", 0, 16)); // NOI18N
        jLabel3.setText("Search by Name:");

        jLabel4.setFont(new java.awt.Font("Sitka Text", 0, 16)); // NOI18N
        jLabel4.setText("Vegetarian:");

        jButton1.setFont(new java.awt.Font("Sitka Text", 0, 16)); // NOI18N
        jButton1.setText("Search");
	jCheckBox1.setBounds(1900,1900,100,100);
	jLabel4.setBounds(1850,1850,50,50);
        jButton1.addActionListener(e->{
            ArrayList<ArrayList<Object>> nestedList = new ArrayList<>();
             ArrayList<ArrayList<Object>> nestedList1 = new ArrayList<>();
            try{
            rs=st.executeQuery("select * from restaurant_loc");
             ResultSetMetaData metaData = rs.getMetaData();
            int columnCount = metaData.getColumnCount();

            // Process each row
            while (rs.next()) {
                ArrayList<Object> row = new ArrayList<>();
                for (int i = 1; i <= columnCount; i++) {
                    row.add(rs.getObject(i)); // Add column value to the row
                }
                nestedList.add(row); // Add the row to the nested list
            }
             for (ArrayList<Object> row : nestedList) {
                System.out.println(row);
            }
            int x = Integer.parseInt(jTextField1.getText());
            int y= Integer.parseInt(jTextField2.getText());
            String name=jTextField3.getText();
            boolean isveg = jCheckBox1.isSelected();
            functionholder f=new functionholder();
            for (ArrayList<Object> row : nestedList) {
              String  rName = row.get(3).toString();    // or ((BigDecimal)row.get(3)).toString() if it's numeric

    
             BigDecimal bdX = (BigDecimal) row.get(1);
             BigDecimal bdY = (BigDecimal) row.get(2);
             int      rX    = bdX.intValue();
             int      rY    = bdY.intValue();
              if ( f.isname(name, rName)
      && f.isxy(x, y, rX, rY) ) {
        nestedList1.add(row);
    }
              
            }
            
            
            }
            catch(Exception n){
              System.out.println(n);
            }
            
            
            
            
            
            
            
           
         for (int i=0;i<nestedList1.size();i++){
            JPanel eachCityPanel= new JPanel();
            eachCityPanel.setBackground(new java.awt.Color(255, 253, 203));
            eachCityPanel.setPreferredSize(new Dimension(550,80));
            eachCityPanel.setLayout(null);
            eachCityPanel.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            JLabel marketPrice=new JLabel("Name:"+nestedList.get(i).get(3));
            marketPrice.setFont(new Font("Sitka Text", Font.PLAIN, 24));
            marketPrice.setBounds(10, 20, 200, 40);
            marketPrice.setHorizontalAlignment(SwingConstants.LEFT);

            

            final int[] counter = {0};

            JButton cropName=new JButton("View Menu");
            cropName.setFont(new Font("Sitka Text", Font.PLAIN, 24));
            cropName.setBounds(400, 10, 150, 40);
            cropName.setHorizontalAlignment(SwingConstants.CENTER);
            cropName.setBorder(null);
            final int index=i;
             String menuid[]={null};
            cropName.addActionListener(f->{
               String restid=(String) nestedList1.get(index).get(0);
               String name=(String) nestedList1.get(index).get(3);
               try{
               String sql="select menu_id from restaurant where restaurantname=(?)";
               ps1=con.prepareStatement(sql);
               ps1.setString(1,name);
               rs1=ps1.executeQuery();
               if(rs1.next()){
                  menuid[0]=rs1.getString("menu_id");
               }
               }catch(Exception z){
                 System.out.println(z);
               }
               String[] temp={args[0],restid,menuid[0]};
               MenuSearch menucalling=new MenuSearch(temp);
               menucalling.setVisible(true);
               this.dispose();
            });

          
            eachCityPanel.add(marketPrice);
            eachCityPanel.add(cropName);

            SearchLowerPanel.add(eachCityPanel);
        }

        JScrollPane scroll= new JScrollPane(SearchLowerPanel);
        scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        scroll.setBounds(0, 150, 650, 200);

		

        this.getContentPane().add(scroll);
          

            });

        javax.swing.GroupLayout SearchUpperPanelLayout = new javax.swing.GroupLayout(SearchUpperPanel);
        SearchUpperPanel.setLayout(SearchUpperPanelLayout);
        SearchUpperPanelLayout.setHorizontalGroup(
            SearchUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchUpperPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SearchUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SearchUpperPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(101, 101, 101))
                    .addGroup(SearchUpperPanelLayout.createSequentialGroup()
                        .addGroup(SearchUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SearchUpperPanelLayout.createSequentialGroup()
                                .addGroup(SearchUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(77, 77, 77)
                                .addGroup(SearchUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(SearchUpperPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(80, 80, 80)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBox1))
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(137, 176, Short.MAX_VALUE))))
        );
        SearchUpperPanelLayout.setVerticalGroup(
            SearchUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchUpperPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(SearchUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SearchUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SearchUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(SearchUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        SearchLowerPanel.setBackground(new java.awt.Color(255, 253, 203));

        javax.swing.GroupLayout SearchLowerPanelLayout = new javax.swing.GroupLayout(SearchLowerPanel);
        SearchLowerPanel.setLayout(SearchLowerPanelLayout);
        SearchLowerPanelLayout.setHorizontalGroup(
            SearchLowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        SearchLowerPanelLayout.setVerticalGroup(
            SearchLowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 206, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SearchUpperPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(SearchLowerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(SearchUpperPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(SearchLowerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RestaurantSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RestaurantSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RestaurantSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RestaurantSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RestaurantSearch(args).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel SearchLowerPanel;
    private javax.swing.JPanel SearchUpperPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}