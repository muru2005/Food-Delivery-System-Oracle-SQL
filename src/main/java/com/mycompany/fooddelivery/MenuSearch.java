/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.fooddelivery;

import java.awt.*;
import java.awt.desktop.QuitStrategy;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.*;

/**
 *
 * @author mahad
 */
public class MenuSearch extends javax.swing.JFrame {
    Connection con;
    Statement st;
    PreparedStatement ps;
    ResultSet rs;
    static ArrayList<ArrayList<Object>> menuItems=new ArrayList<ArrayList<Object>>();
    /**
     * Creates new form Cart
     */
    public MenuSearch(String [] args) {
        try{
            Class.forName("oracle.jdbc.OracleDriver");
            JOptionPane.showMessageDialog(this,"Driver Loaded!");
            try{
                con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE",
                        "system","dbms");
                st=con.createStatement();
                JOptionPane.showMessageDialog(this,"Connected to Oracle database!");
                
            }catch(SQLException ex){
                Logger.getLogger(com.mycompany.fooddelivery.MenuSearch.class.getName()).log(Level.SEVERE,null, ex); //Add FoodDelivery before .Cart
JOptionPane.showMessageDialog(this,ex.getMessage());
            }
        }catch(ClassNotFoundException ex){
            Logger.getLogger(com.mycompany.fooddelivery.MenuSearch.class.getName()).log(Level.SEVERE,null, ex);  //Add FoodDelivery before .Cart
JOptionPane.showMessageDialog(this,ex.getMessage());

        }
        initComponents(args);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents(String args []) {

        CartUpperPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        CartLowerPanel = new javax.swing.JPanel();
        OffersScrollPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CartUpperPanel.setBackground(new java.awt.Color(255, 128, 0));

        jLabel1.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jLabel1.setText("Menu");

        jButton1.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        jButton1.setText("Back");

        jLabel2.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jLabel2.setText("Offers:");

        jButton2.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        jButton2.setText("Cart");
        jButton2.addActionListener(e->{
                int n=0;
        for(ArrayList<Object> item: menuItems){
            if((int)item.get(2)>0){
                n++;
            }
        }
        String[] stringArray=new String[n*3+3];
        int stringArrayIndex=0;
        
        for(ArrayList<Object> item: menuItems){
            if((int)item.get(2)>0){
                stringArray[stringArrayIndex++]=String.valueOf(item.get(0));
                stringArray[stringArrayIndex++]=String.valueOf(item.get(1));
                stringArray[stringArrayIndex++]=String.valueOf(item.get(2));
                System.out.println(item);
            }
        }

        stringArray[3*n]=args[0];
          stringArray[3*n+1]=args[1];
            stringArray[3*n+2]=args[2];
        Cart callCart=new Cart(stringArray);
        callCart.setVisible(true);
        this.dispose();
            });

        javax.swing.GroupLayout CartUpperPanelLayout = new javax.swing.GroupLayout(CartUpperPanel);
        CartUpperPanel.setLayout(CartUpperPanelLayout);
        CartUpperPanelLayout.setHorizontalGroup(
            CartUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CartUpperPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CartUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(199, 199, 199)
                .addGroup(CartUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(CartUpperPanelLayout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        CartUpperPanelLayout.setVerticalGroup(
            CartUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CartUpperPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CartUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(CartUpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        CartLowerPanel.setBackground(new java.awt.Color(255, 253, 203));

        javax.swing.GroupLayout CartLowerPanelLayout = new javax.swing.GroupLayout(CartLowerPanel);
        CartLowerPanel.setLayout(CartLowerPanelLayout);
        CartLowerPanelLayout.setHorizontalGroup(
            CartLowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        CartLowerPanelLayout.setVerticalGroup(
            CartLowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 134, Short.MAX_VALUE)
        );

        OffersScrollPanel.setBackground(new java.awt.Color(255, 253, 203));

        javax.swing.GroupLayout OffersScrollPanelLayout = new javax.swing.GroupLayout(OffersScrollPanel);
        OffersScrollPanel.setLayout(OffersScrollPanelLayout);
        OffersScrollPanelLayout.setHorizontalGroup(
            OffersScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 243, Short.MAX_VALUE)
        );
        OffersScrollPanelLayout.setVerticalGroup(
            OffersScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(CartLowerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(CartUpperPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OffersScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CartUpperPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(OffersScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CartLowerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ArrayList<ArrayList<Object>> discounts=new ArrayList<ArrayList<Object>>();

        try{

            String rest_id=args[1];
            String statement="select min_amount,discount_amount from offers where rest_id='"+rest_id+"'";
            rs=st.executeQuery(statement);
            ResultSetMetaData metaData = rs.getMetaData();
            int columnCount = metaData.getColumnCount();

            // Process each row
            while (rs.next()) {
                ArrayList<Object> offer_row=new ArrayList<Object>();
                for (int i = 1; i <= columnCount; i++) {
                    offer_row.add(String.valueOf(rs.getObject(i))); // Add column value to the row
                }
                discounts.add(offer_row); // Add the row to the nested list
            }
             for (ArrayList<Object> row : discounts) {
                System.out.println(row);
            }
            
            
            }
        catch(Exception n){
              System.out.println(n);
            }
    
            OffersScrollPanel.setLayout(new BoxLayout(OffersScrollPanel, BoxLayout.Y_AXIS));
    
            for (int i=0;i<discounts.size();i++){
                JPanel eachCityPanel= new JPanel();
                eachCityPanel.setBackground(new java.awt.Color(255, 253, 203));
                eachCityPanel.setPreferredSize(new Dimension(150,80));
                eachCityPanel.setLayout(null);
                eachCityPanel.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
    
                JLabel minimumAmount=new JLabel("Minimum amount: ₹"+discounts.get(i).get(0));
                minimumAmount.setFont(new Font("Sitka Text", Font.PLAIN, 14));
                minimumAmount.setBounds(10, 10, 175, 20);
                minimumAmount.setHorizontalAlignment(SwingConstants.LEFT);
    
                JLabel discountAmount=new JLabel("Discount amount: ₹"+discounts.get(i).get(1));
                discountAmount.setFont(new Font("Sitka Text", Font.PLAIN, 14));
                discountAmount.setBounds(10, 40, 175, 20);
                discountAmount.setHorizontalAlignment(SwingConstants.LEFT);
    
                eachCityPanel.add(minimumAmount);
                eachCityPanel.add(discountAmount);
                    
                OffersScrollPanel.add(eachCityPanel);
            }
    
            JScrollPane scrollOffers= new JScrollPane(OffersScrollPanel);
            scrollOffers.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
            scrollOffers.setBounds(405, 0, 200, 150);
    
            this.getContentPane().add(scrollOffers);

            

            
            try{

                String menu_id=args[2];
                String getMenuStatement="select food_name,price from food where menu_id='"+menu_id+"'";
                rs=st.executeQuery(getMenuStatement);
                ResultSetMetaData metaData = rs.getMetaData();
                int columnCount = metaData.getColumnCount();
    
                // Process each row
                while (rs.next()) {
                    ArrayList<Object> menu_row=new ArrayList<Object>();
                    for (int i = 1; i <= columnCount; i++) {
                        menu_row.add(String.valueOf(rs.getObject(i))); // Add column value to the row
                    }
                    menu_row.add(0);
                    menuItems.add(menu_row); // Add the row to the nested list
                }
                 for (ArrayList<Object> row : menuItems) {
                    System.out.println(row);
                }
                
                
                }
            catch(Exception n){
                  System.out.println(n);
                }

                
        
                CartLowerPanel.setLayout(new BoxLayout(CartLowerPanel, BoxLayout.Y_AXIS));
                
                for (int i=0;i<menuItems.size();i++){
                    JPanel eachCityPanel1= new JPanel();
                    eachCityPanel1.setBackground(new java.awt.Color(255, 253, 203));
                    eachCityPanel1.setPreferredSize(new Dimension(615,80));
                    eachCityPanel1.setLayout(null);
                    eachCityPanel1.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        
                    JLabel itemName=new JLabel(String.valueOf(menuItems.get(i).get(0)));
                    itemName.setFont(new Font("Sitka Text", Font.PLAIN, 20));
                    itemName.setBounds(10, 25, 225, 25);
                    itemName.setHorizontalAlignment(SwingConstants.LEFT);
        
                    JLabel price=new JLabel("₹"+menuItems.get(i).get(1));
                    price.setFont(new Font("Sitka Text", Font.PLAIN, 20));
                    price.setBounds(245, 25, 75, 25);
                    price.setHorizontalAlignment(SwingConstants.LEFT);

                    JLabel qty=new JLabel(String.valueOf(menuItems.get(i).get(2)));
                    qty.setFont(new Font("Sitka Text", Font.PLAIN, 20));
                    qty.setBounds(450,30, 20, 40);
                    qty.setHorizontalAlignment(SwingConstants.CENTER);

                    final int index=i;

                    JButton addButton =new JButton("-");
                    addButton.setBounds(400, 30, 40, 40);
                    addButton.setHorizontalAlignment(SwingConstants.CENTER);
                    addButton.addActionListener(e->{
                        System.out.println("Hello");
                        int temp=(int)menuItems.get(index).get(2);
                        if((int)menuItems.get(index).get(2)>0){
                            menuItems.get(index).set(2,temp-1);
                        }
                        qty.setText(String.valueOf(menuItems.get(index).get(2))); 
                    });


                    JButton subButton =new JButton("+");
                    subButton.setBounds(480, 30, 40, 40);
                    subButton.setHorizontalAlignment(SwingConstants.CENTER);
                    subButton.addActionListener(e->{
                        System.out.println("Hello");
                        int temp=(int)menuItems.get(index).get(2);
                        menuItems.get(index).set(2,temp+1);
                        qty.setText(String.valueOf((int)menuItems.get(index).get(2))); 
                    });                    


        
                    eachCityPanel1.add(itemName);
                    eachCityPanel1.add(price);
                    eachCityPanel1.add(addButton);
                    eachCityPanel1.add(subButton);
                    eachCityPanel1.add(qty);
                        
                    CartLowerPanel.add(eachCityPanel1);
                }
        
                JScrollPane scrollItems= new JScrollPane(CartLowerPanel);
                scrollItems.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
                scrollItems.setBounds(0, 150, 605, 200);
        
                this.getContentPane().add(scrollItems);
    
            getContentPane().setLayout(null);
            CartUpperPanel.setBounds(0, 0, 400, 150);
            getContentPane().add(CartUpperPanel);  // Add upper panel

            this.setSize(615,350);

    }// </editor-fold>//GEN-END:initComponents

   //GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuSearch(args).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CartLowerPanel;
    private javax.swing.JPanel CartUpperPanel;
    private javax.swing.JPanel OffersScrollPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
